<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" ignored="0" total="34" passed="30">
  <reporter-output>
  </reporter-output>
  <suite name="RegressionSuite" duration-ms="5458" started-at="2020-02-10T03:35:20Z" finished-at="2020-02-10T03:35:25Z">
    <groups>
    </groups>
    <test name="API, Basic tests" duration-ms="5458" started-at="2020-02-10T03:35:20Z" finished-at="2020-02-10T03:35:25Z">
      <class name="com.employee.tests.TC002_Get_Single_Employee_Record">
        <test-method status="PASS" signature="baseSetUp()[pri:0, instance:com.employee.tests.TC002_Get_Single_Employee_Record@490ab905]" name="baseSetUp" is-config="true" duration-ms="1" started-at="2020-02-10T03:35:23Z" finished-at="2020-02-10T03:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseSetUp -->
        <test-method status="PASS" signature="beforeClassSetUp()[pri:0, instance:com.employee.tests.TC002_Get_Single_Employee_Record@490ab905]" name="beforeClassSetUp" is-config="true" duration-ms="493" started-at="2020-02-10T03:35:23Z" finished-at="2020-02-10T03:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassSetUp -->
        <test-method status="FAIL" signature="testResponseBody()[pri:0, instance:com.employee.tests.TC002_Get_Single_Employee_Record@490ab905]" name="testResponseBody" duration-ms="3" started-at="2020-02-10T03:35:23Z" finished-at="2020-02-10T03:35:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at com.employee.tests.TC002_Get_Single_Employee_Record.testResponseBody(TC002_Get_Single_Employee_Record.java:30)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBody -->
        <test-method status="PASS" signature="testResponseTime()[pri:0, instance:com.employee.tests.TC002_Get_Single_Employee_Record@490ab905]" name="testResponseTime" duration-ms="1" started-at="2020-02-10T03:35:23Z" finished-at="2020-02-10T03:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseTime -->
        <test-method status="PASS" signature="testStatusCode()[pri:0, instance:com.employee.tests.TC002_Get_Single_Employee_Record@490ab905]" name="testStatusCode" duration-ms="1" started-at="2020-02-10T03:35:23Z" finished-at="2020-02-10T03:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatusCode -->
        <test-method status="PASS" signature="testStatusLine()[pri:0, instance:com.employee.tests.TC002_Get_Single_Employee_Record@490ab905]" name="testStatusLine" duration-ms="0" started-at="2020-02-10T03:35:23Z" finished-at="2020-02-10T03:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatusLine -->
        <test-method status="PASS" signature="afterClassTearDown()[pri:0, instance:com.employee.tests.TC002_Get_Single_Employee_Record@490ab905]" name="afterClassTearDown" is-config="true" duration-ms="2" started-at="2020-02-10T03:35:23Z" finished-at="2020-02-10T03:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassTearDown -->
        <test-method status="PASS" signature="baseTearDown()[pri:0, instance:com.employee.tests.TC002_Get_Single_Employee_Record@490ab905]" name="baseTearDown" is-config="true" duration-ms="0" started-at="2020-02-10T03:35:23Z" finished-at="2020-02-10T03:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTearDown -->
      </class> <!-- com.employee.tests.TC002_Get_Single_Employee_Record -->
      <class name="com.employee.tests.TC001_Get_All_Employees">
        <test-method status="PASS" signature="baseSetUp()[pri:0, instance:com.employee.tests.TC001_Get_All_Employees@1e397ed7]" name="baseSetUp" is-config="true" duration-ms="38" started-at="2020-02-10T03:35:20Z" finished-at="2020-02-10T03:35:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseSetUp -->
        <test-method status="PASS" signature="beforeClassSetUp()[pri:0, instance:com.employee.tests.TC001_Get_All_Employees@1e397ed7]" name="beforeClassSetUp" is-config="true" duration-ms="2534" started-at="2020-02-10T03:35:20Z" finished-at="2020-02-10T03:35:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassSetUp -->
        <test-method status="PASS" signature="testContentEncoding()[pri:0, instance:com.employee.tests.TC001_Get_All_Employees@1e397ed7]" name="testContentEncoding" duration-ms="6" started-at="2020-02-10T03:35:22Z" finished-at="2020-02-10T03:35:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContentEncoding -->
        <test-method status="PASS" signature="testContentLength()[pri:0, instance:com.employee.tests.TC001_Get_All_Employees@1e397ed7]" name="testContentLength" duration-ms="1" started-at="2020-02-10T03:35:22Z" finished-at="2020-02-10T03:35:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContentLength -->
        <test-method status="PASS" signature="testContentType()[pri:0, instance:com.employee.tests.TC001_Get_All_Employees@1e397ed7]" name="testContentType" duration-ms="1" started-at="2020-02-10T03:35:22Z" finished-at="2020-02-10T03:35:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContentType -->
        <test-method status="PASS" signature="testCookies()[pri:0, instance:com.employee.tests.TC001_Get_All_Employees@1e397ed7]" name="testCookies" duration-ms="2" started-at="2020-02-10T03:35:22Z" finished-at="2020-02-10T03:35:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCookies -->
        <test-method status="PASS" signature="testResponseBody()[pri:0, instance:com.employee.tests.TC001_Get_All_Employees@1e397ed7]" name="testResponseBody" duration-ms="28" started-at="2020-02-10T03:35:22Z" finished-at="2020-02-10T03:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBody -->
        <test-method status="PASS" signature="testResponseTime()[pri:0, instance:com.employee.tests.TC001_Get_All_Employees@1e397ed7]" name="testResponseTime" duration-ms="1" started-at="2020-02-10T03:35:23Z" finished-at="2020-02-10T03:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseTime -->
        <test-method status="PASS" signature="testServerType()[pri:0, instance:com.employee.tests.TC001_Get_All_Employees@1e397ed7]" name="testServerType" duration-ms="1" started-at="2020-02-10T03:35:23Z" finished-at="2020-02-10T03:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testServerType -->
        <test-method status="PASS" signature="testStatuLine()[pri:0, instance:com.employee.tests.TC001_Get_All_Employees@1e397ed7]" name="testStatuLine" duration-ms="1" started-at="2020-02-10T03:35:23Z" finished-at="2020-02-10T03:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatuLine -->
        <test-method status="PASS" signature="testStatusCode()[pri:0, instance:com.employee.tests.TC001_Get_All_Employees@1e397ed7]" name="testStatusCode" duration-ms="1" started-at="2020-02-10T03:35:23Z" finished-at="2020-02-10T03:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatusCode -->
        <test-method status="PASS" signature="afterClassTearDown()[pri:0, instance:com.employee.tests.TC001_Get_All_Employees@1e397ed7]" name="afterClassTearDown" is-config="true" duration-ms="1" started-at="2020-02-10T03:35:23Z" finished-at="2020-02-10T03:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassTearDown -->
        <test-method status="PASS" signature="baseTearDown()[pri:0, instance:com.employee.tests.TC001_Get_All_Employees@1e397ed7]" name="baseTearDown" is-config="true" duration-ms="0" started-at="2020-02-10T03:35:23Z" finished-at="2020-02-10T03:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTearDown -->
      </class> <!-- com.employee.tests.TC001_Get_All_Employees -->
      <class name="com.employee.tests.TC004_PUT_Single_Employee_Record">
        <test-method status="PASS" signature="baseSetUp()[pri:0, instance:com.employee.tests.TC004_PUT_Single_Employee_Record@27c20538]" name="baseSetUp" is-config="true" duration-ms="2" started-at="2020-02-10T03:35:24Z" finished-at="2020-02-10T03:35:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseSetUp -->
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:com.employee.tests.TC004_PUT_Single_Employee_Record@27c20538]" name="createEmployee" is-config="true" duration-ms="328" started-at="2020-02-10T03:35:24Z" finished-at="2020-02-10T03:35:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="PASS" signature="testContentLength()[pri:0, instance:com.employee.tests.TC004_PUT_Single_Employee_Record@27c20538]" name="testContentLength" duration-ms="1" started-at="2020-02-10T03:35:24Z" finished-at="2020-02-10T03:35:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContentLength -->
        <test-method status="PASS" signature="testPragma()[pri:0, instance:com.employee.tests.TC004_PUT_Single_Employee_Record@27c20538]" name="testPragma" duration-ms="2" started-at="2020-02-10T03:35:24Z" finished-at="2020-02-10T03:35:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPragma -->
        <test-method status="PASS" signature="testResponseBody()[pri:0, instance:com.employee.tests.TC004_PUT_Single_Employee_Record@27c20538]" name="testResponseBody" duration-ms="15" started-at="2020-02-10T03:35:24Z" finished-at="2020-02-10T03:35:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBody -->
        <test-method status="PASS" signature="testResponseTime()[pri:0, instance:com.employee.tests.TC004_PUT_Single_Employee_Record@27c20538]" name="testResponseTime" duration-ms="1" started-at="2020-02-10T03:35:24Z" finished-at="2020-02-10T03:35:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseTime -->
        <test-method status="PASS" signature="testStatus()[pri:0, instance:com.employee.tests.TC004_PUT_Single_Employee_Record@27c20538]" name="testStatus" duration-ms="11" started-at="2020-02-10T03:35:24Z" finished-at="2020-02-10T03:35:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
        <test-method status="PASS" signature="testStatusCode()[pri:0, instance:com.employee.tests.TC004_PUT_Single_Employee_Record@27c20538]" name="testStatusCode" duration-ms="1" started-at="2020-02-10T03:35:24Z" finished-at="2020-02-10T03:35:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatusCode -->
        <test-method status="PASS" signature="testStatusLine()[pri:0, instance:com.employee.tests.TC004_PUT_Single_Employee_Record@27c20538]" name="testStatusLine" duration-ms="1" started-at="2020-02-10T03:35:24Z" finished-at="2020-02-10T03:35:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatusLine -->
        <test-method status="PASS" signature="baseTearDown()[pri:0, instance:com.employee.tests.TC004_PUT_Single_Employee_Record@27c20538]" name="baseTearDown" is-config="true" duration-ms="0" started-at="2020-02-10T03:35:24Z" finished-at="2020-02-10T03:35:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTearDown -->
        <test-method status="PASS" signature="afterClassTearDown()[pri:0, instance:com.employee.tests.TC004_PUT_Single_Employee_Record@27c20538]" name="afterClassTearDown" is-config="true" duration-ms="0" started-at="2020-02-10T03:35:24Z" finished-at="2020-02-10T03:35:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassTearDown -->
      </class> <!-- com.employee.tests.TC004_PUT_Single_Employee_Record -->
      <class name="com.employee.tests.TC005_DELETE_Single_Employee_Record">
        <test-method status="PASS" signature="baseSetUp()[pri:0, instance:com.employee.tests.TC005_DELETE_Single_Employee_Record@72d818d1]" name="baseSetUp" is-config="true" duration-ms="2" started-at="2020-02-10T03:35:24Z" finished-at="2020-02-10T03:35:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseSetUp -->
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:com.employee.tests.TC005_DELETE_Single_Employee_Record@72d818d1]" name="createEmployee" is-config="true" duration-ms="880" started-at="2020-02-10T03:35:24Z" finished-at="2020-02-10T03:35:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="FAIL" signature="testContentLength()[pri:0, instance:com.employee.tests.TC005_DELETE_Single_Employee_Record@72d818d1]" name="testContentLength" duration-ms="1" started-at="2020-02-10T03:35:25Z" finished-at="2020-02-10T03:35:25Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.employee.tests.TC005_DELETE_Single_Employee_Record.testContentLength(TC005_DELETE_Single_Employee_Record.java:90)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContentLength -->
        <test-method status="PASS" signature="testPragma()[pri:0, instance:com.employee.tests.TC005_DELETE_Single_Employee_Record@72d818d1]" name="testPragma" duration-ms="1" started-at="2020-02-10T03:35:25Z" finished-at="2020-02-10T03:35:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPragma -->
        <test-method status="FAIL" signature="testResponseBody()[pri:0, instance:com.employee.tests.TC005_DELETE_Single_Employee_Record@72d818d1]" name="testResponseBody" duration-ms="12" started-at="2020-02-10T03:35:25Z" finished-at="2020-02-10T03:35:25Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.employee.tests.TC005_DELETE_Single_Employee_Record.testResponseBody(TC005_DELETE_Single_Employee_Record.java:45)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBody -->
        <test-method status="PASS" signature="testResponseTime()[pri:0, instance:com.employee.tests.TC005_DELETE_Single_Employee_Record@72d818d1]" name="testResponseTime" duration-ms="1" started-at="2020-02-10T03:35:25Z" finished-at="2020-02-10T03:35:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseTime -->
        <test-method status="FAIL" signature="testStatus()[pri:0, instance:com.employee.tests.TC005_DELETE_Single_Employee_Record@72d818d1]" name="testStatus" duration-ms="14" started-at="2020-02-10T03:35:25Z" finished-at="2020-02-10T03:35:25Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [success] but found [failed]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [success] but found [failed]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.employee.tests.TC005_DELETE_Single_Employee_Record.testStatus(TC005_DELETE_Single_Employee_Record.java:52)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
        <test-method status="PASS" signature="testStatusCode()[pri:0, instance:com.employee.tests.TC005_DELETE_Single_Employee_Record@72d818d1]" name="testStatusCode" duration-ms="2" started-at="2020-02-10T03:35:25Z" finished-at="2020-02-10T03:35:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatusCode -->
        <test-method status="PASS" signature="testStatusLine()[pri:0, instance:com.employee.tests.TC005_DELETE_Single_Employee_Record@72d818d1]" name="testStatusLine" duration-ms="1" started-at="2020-02-10T03:35:25Z" finished-at="2020-02-10T03:35:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatusLine -->
        <test-method status="PASS" signature="afterClassTearDown()[pri:0, instance:com.employee.tests.TC005_DELETE_Single_Employee_Record@72d818d1]" name="afterClassTearDown" is-config="true" duration-ms="1" started-at="2020-02-10T03:35:25Z" finished-at="2020-02-10T03:35:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassTearDown -->
        <test-method status="PASS" signature="baseTearDown()[pri:0, instance:com.employee.tests.TC005_DELETE_Single_Employee_Record@72d818d1]" name="baseTearDown" is-config="true" duration-ms="0" started-at="2020-02-10T03:35:25Z" finished-at="2020-02-10T03:35:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTearDown -->
      </class> <!-- com.employee.tests.TC005_DELETE_Single_Employee_Record -->
      <class name="com.employee.tests.TC003_POST_Single_Employee_Record">
        <test-method status="PASS" signature="baseSetUp()[pri:0, instance:com.employee.tests.TC003_POST_Single_Employee_Record@56ac3a89]" name="baseSetUp" is-config="true" duration-ms="1" started-at="2020-02-10T03:35:23Z" finished-at="2020-02-10T03:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseSetUp -->
        <test-method status="PASS" signature="beforeClassSetUp()[pri:0, instance:com.employee.tests.TC003_POST_Single_Employee_Record@56ac3a89]" name="beforeClassSetUp" is-config="true" duration-ms="384" started-at="2020-02-10T03:35:23Z" finished-at="2020-02-10T03:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassSetUp -->
        <test-method status="PASS" signature="testContentLength()[pri:0, instance:com.employee.tests.TC003_POST_Single_Employee_Record@56ac3a89]" name="testContentLength" duration-ms="2" started-at="2020-02-10T03:35:23Z" finished-at="2020-02-10T03:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContentLength -->
        <test-method status="PASS" signature="testPragma()[pri:0, instance:com.employee.tests.TC003_POST_Single_Employee_Record@56ac3a89]" name="testPragma" duration-ms="1" started-at="2020-02-10T03:35:23Z" finished-at="2020-02-10T03:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPragma -->
        <test-method status="PASS" signature="testResponseBody()[pri:0, instance:com.employee.tests.TC003_POST_Single_Employee_Record@56ac3a89]" name="testResponseBody" duration-ms="2" started-at="2020-02-10T03:35:23Z" finished-at="2020-02-10T03:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseBody -->
        <test-method status="PASS" signature="testResponseTime()[pri:0, instance:com.employee.tests.TC003_POST_Single_Employee_Record@56ac3a89]" name="testResponseTime" duration-ms="1" started-at="2020-02-10T03:35:23Z" finished-at="2020-02-10T03:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResponseTime -->
        <test-method status="PASS" signature="testStatus()[pri:0, instance:com.employee.tests.TC003_POST_Single_Employee_Record@56ac3a89]" name="testStatus" duration-ms="376" started-at="2020-02-10T03:35:23Z" finished-at="2020-02-10T03:35:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
        <test-method status="PASS" signature="testStatusCode()[pri:0, instance:com.employee.tests.TC003_POST_Single_Employee_Record@56ac3a89]" name="testStatusCode" duration-ms="2" started-at="2020-02-10T03:35:24Z" finished-at="2020-02-10T03:35:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatusCode -->
        <test-method status="PASS" signature="testStatusLine()[pri:0, instance:com.employee.tests.TC003_POST_Single_Employee_Record@56ac3a89]" name="testStatusLine" duration-ms="2" started-at="2020-02-10T03:35:24Z" finished-at="2020-02-10T03:35:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatusLine -->
        <test-method status="PASS" signature="afterClassTearDown()[pri:0, instance:com.employee.tests.TC003_POST_Single_Employee_Record@56ac3a89]" name="afterClassTearDown" is-config="true" duration-ms="1" started-at="2020-02-10T03:35:24Z" finished-at="2020-02-10T03:35:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassTearDown -->
        <test-method status="PASS" signature="baseTearDown()[pri:0, instance:com.employee.tests.TC003_POST_Single_Employee_Record@56ac3a89]" name="baseTearDown" is-config="true" duration-ms="0" started-at="2020-02-10T03:35:24Z" finished-at="2020-02-10T03:35:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTearDown -->
      </class> <!-- com.employee.tests.TC003_POST_Single_Employee_Record -->
    </test> <!-- API, Basic tests -->
  </suite> <!-- RegressionSuite -->
</testng-results>
